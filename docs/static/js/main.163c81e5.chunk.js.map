{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GigGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GigGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAoB9C,OACI,sBAAMC,SAbU,SAAEC,GAElBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAQ,IAC3BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAOlB,SACI,uBACIO,KAAK,OACLC,MAAUT,EACVU,SArBc,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,a,+BCLnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCDPO,EAAc,SAAC,GAAsB,IAAnBH,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAIlC,OACI,sBAAKc,UAAY,6CAAjB,UACI,qBAAKC,IAAMf,EAAMgB,IAAON,IACxB,4BAAKA,QCLJO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECCb,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAqBtC,OAdAC,qBAAU,WAENxB,EAAQC,GACHwB,MAAK,SAAAC,GAEFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAKtB,CAACpB,IAEGqB,EDpB2BK,CAAc1B,GAAnCa,EAFwB,EAE7BN,KAAaa,EAFgB,EAEhBA,QAErB,OACI,qCACA,oBAAIJ,UAAY,oCAAhB,SAAsDhB,IAEpDoB,GAAW,mBAAGJ,UAAY,mCAAf,qBAEb,qBAAKA,UAAY,YAAjB,SAGQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADGA,EAAIC,aEfvBgB,EAAe,WAAM,MAIMzC,mBAAU,CAAC,cAJjB,mBAIvB0C,EAJuB,KAIX3C,EAJW,KAa9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAkBA,IAC/B,uBAEA,6BAEI2C,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAaA,GADLA,Y,MCrBhC6B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.163c81e5.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = ( e ) =>{\r\n        setInputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit =( e )=>{\r\n        \r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length >2 ){\r\n            setCategories( cats => [ inputValue, ...cats ]);  \r\n            setInputValue(''); \r\n        }\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit = { handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value = { inputValue }\r\n                onChange = { handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n  };","\r\n\r\n\r\nexport const getGifs = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category )}&limit=10&api_key=mZDfohu4inQrzo14j3AhBXGvWHqqEk8J`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { title, url } ) => {\r\n\r\n    // console.log( id, title, url );\r\n\r\n    return (\r\n        <div className = 'card animate__animated animate__fadeInLeft'>\r\n            <img src={ url } alt= { title }/>\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GigGrid = ({ category }) => {\r\n\r\n    const { data:images, loading }  = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n        <h3 className = \"animate__animated animate__fadeIn\">{ category }</h3>\r\n\r\n        { loading && <p className = \"animate__animated animate__flash\">Loading</p>}\r\n        \r\n        <div className = \"card-grid\">\r\n            \r\n            {\r\n                images.map( img => (\r\n                    <GifGridItem\r\n                        key = { img.id }\r\n                        { ...img }\r\n                    />\r\n                ))\r\n            }\r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs(category)\r\n            .then(imgs => {\r\n\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n\r\n            })\r\n\r\n    }, [category])\r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GigGrid } from './components/GigGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    // const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n\r\n    const [categories, setCategories] = useState( ['One Punch']);\r\n    \r\n    // const handleAdd = () =>{\r\n\r\n    //     // setCategories([...categories, 'Dark']) \r\n    //     setCategories( cats => [...categories, 'Dark']);\r\n        \r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories = { setCategories }/>\r\n            <hr />\r\n\r\n            <ol>\r\n            {\r\n                categories.map( category => (\r\n                    <GigGrid\r\n                        key = { category }\r\n                        category = { category }\r\n                    />\r\n                ))\r\n            }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n\n    <GifExpertApp />,\n \n  document.getElementById('root')\n);"],"sourceRoot":""}